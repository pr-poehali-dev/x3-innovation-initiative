import { useState } from 'react';
import { Card } from '@/components/ui/card';
import { Button } from '@/components/ui/button';
import { Progress } from '@/components/ui/progress';
import { Tabs, TabsContent, TabsList, TabsTrigger } from '@/components/ui/tabs';
import { Badge } from '@/components/ui/badge';
import { useToast } from '@/hooks/use-toast';

const PRIVILEGES = [
  { name: 'üéñÔ∏è –ë–æ–º–∂', minClick: 500, maxClick: 2500, required: 100000 },
  { name: 'üí∞ –ë–æ–≥–∞—á', minClick: 3000, maxClick: 5000, required: 1000000 },
  { name: 'üè¶ –ú–∏–ª–ª–∏–æ–Ω–µ—Ä', minClick: 5000, maxClick: 10000, required: 2000000 },
  { name: 'üöÄ –ú–∏–ª–ª–∏–∞—Ä–¥–µ—Ä', minClick: 10000, maxClick: 25000, required: 10000000 },
  { name: '‚ö° –ß–∏—Ç–µ—Ä', minClick: 25000, maxClick: 50000, required: 25000000 },
  { name: 'üëë VIP', minClick: 50000, maxClick: 100000, required: 50000000 },
  { name: 'üéØ –•–∞–∫–µ—Ä', minClick: 100000, maxClick: 250000, required: 100000000 },
  { name: 'üåü –ë–æ–≥', minClick: 250000, maxClick: 500000, required: 100000000 },
];

const BUSINESSES = [
  { id: 1, name: '24/7 –±–∏–∑–Ω–µ—Å', price: 500000, profit: 50000, emoji: 'üè™' },
  { id: 2, name: '–û—Ñ–∏—Å', price: 999999, profit: 75000, emoji: 'üè¢' },
  { id: 3, name: '–ö–æ–º–ø–∞–Ω–∏—è –û–û–û "–ú–∏–ª–∏–∞—Ä–¥–µ—Ä—ã"', price: 1500000, profit: 125000, emoji: 'üè¶' },
  { id: 4, name: '–ê—Ä–±–∏—Ç—Ä–∞–∂ –∫–æ–º–∞–Ω–¥–∞ —Å –±—é–¥–∂–µ—Ç–æ–º –≤ 5 –ú–õ–†–î', price: 200000, profit: 25000, emoji: 'üíº' },
  { id: 5, name: '–û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è –ª—É—á—à–∞—è —Ä–∞–±–æ—Ç–∞ —Å –ø—Ä–∏–±—ã–ª—å—é 50000/–°–µ–∫', price: 500000, profit: 100000, emoji: 'üíé' },
];

export default function Index() {
  const { toast } = useToast();
  const [balance, setBalance] = useState(0);
  const [donateBalance, setDonateBalance] = useState(0);
  const [privilege, setPrivilege] = useState(PRIVILEGES[0]);
  const [ownedBusinesses, setOwnedBusinesses] = useState<number[]>([]);
  const [businessProfit, setBusinessProfit] = useState(0);
  const [lastClick, setLastClick] = useState(0);
  const [coinAnimation, setCoinAnimation] = useState(false);

  const formatNumber = (num: number) => {
    return num.toLocaleString('ru-RU');
  };

  const handleClick = () => {
    const now = Date.now();
    if (now - lastClick < 1000) {
      toast({
        title: '‚è≥ –ü–æ–¥–æ–∂–¥–∏ —Å–µ–∫—É–Ω–¥—É!',
        description: '–ö–ª–∏–∫–∏ –¥–æ—Å—Ç—É–ø–Ω—ã —Ä–∞–∑ –≤ —Å–µ–∫—É–Ω–¥—É',
        variant: 'destructive',
      });
      return;
    }

    const earned = Math.floor(Math.random() * (privilege.maxClick - privilege.minClick + 1)) + privilege.minClick;
    setBalance(prev => prev + earned);
    setLastClick(now);
    setCoinAnimation(true);
    setTimeout(() => setCoinAnimation(false), 300);

    toast({
      title: 'üí∏ –ó–∞—Ä–∞–±–æ—Ç–∞–Ω–æ!',
      description: `+${formatNumber(earned)} –º–æ–Ω–µ—Ç`,
    });

    const newBalance = balance + earned;
    const newPrivilege = PRIVILEGES.slice().reverse().find(p => newBalance >= p.required);
    if (newPrivilege && newPrivilege.name !== privilege.name) {
      setPrivilege(newPrivilege);
      toast({
        title: 'üéâ –ù–æ–≤–∞—è –ø—Ä–∏–≤–∏–ª–µ–≥–∏—è!',
        description: `–¢–µ–ø–µ—Ä—å —Ç—ã ${newPrivilege.name}`,
      });
    }
  };

  const buyBusiness = (business: typeof BUSINESSES[0]) => {
    if (balance < business.price) {
      toast({
        title: '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç',
        description: `–ù—É–∂–Ω–æ ${formatNumber(business.price)} –º–æ–Ω–µ—Ç`,
        variant: 'destructive',
      });
      return;
    }

    if (ownedBusinesses.includes(business.id)) {
      toast({
        title: '‚ùå –£–∂–µ –∫—É–ø–ª–µ–Ω–æ',
        description: '–£ —Ç–µ–±—è —É–∂–µ –µ—Å—Ç—å —ç—Ç–æ—Ç –±–∏–∑–Ω–µ—Å',
        variant: 'destructive',
      });
      return;
    }

    setBalance(prev => prev - business.price);
    setOwnedBusinesses(prev => [...prev, business.id]);
    setBusinessProfit(prev => prev + business.profit);
    
    toast({
      title: 'üéâ –ë–∏–∑–Ω–µ—Å –∫—É–ø–ª–µ–Ω!',
      description: `${business.emoji} ${business.name}`,
    });
  };

  const collectProfit = () => {
    if (businessProfit === 0) {
      toast({
        title: '‚ùå –ù–µ—Ç –±–∏–∑–Ω–µ—Å–æ–≤',
        description: '–°–Ω–∞—á–∞–ª–∞ –∫—É–ø–∏ –±–∏–∑–Ω–µ—Å',
        variant: 'destructive',
      });
      return;
    }

    setBalance(prev => prev + businessProfit);
    toast({
      title: 'üí∞ –ü—Ä–∏–±—ã–ª—å —Å–æ–±—Ä–∞–Ω–∞!',
      description: `+${formatNumber(businessProfit)} –º–æ–Ω–µ—Ç`,
    });
  };

  const playCasino = (bet: number) => {
    if (balance < bet) {
      toast({
        title: '‚ùå –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –º–æ–Ω–µ—Ç',
        variant: 'destructive',
      });
      return;
    }

    const win = Math.random() < 0.4;
    if (win) {
      const winAmount = Math.floor(bet * 1.5);
      setBalance(prev => prev + winAmount - bet);
      toast({
        title: 'üé∞ –í—ã–∏–≥—Ä—ã—à!',
        description: `+${formatNumber(winAmount)} –º–æ–Ω–µ—Ç`,
      });
    } else {
      setBalance(prev => prev - bet);
      toast({
        title: 'üò¢ –ü—Ä–æ–∏–≥—Ä—ã—à',
        description: `-${formatNumber(bet)} –º–æ–Ω–µ—Ç`,
        variant: 'destructive',
      });
    }
  };

  const progressToNext = () => {
    const currentIndex = PRIVILEGES.indexOf(privilege);
    if (currentIndex === PRIVILEGES.length - 1) return 100;
    const nextPrivilege = PRIVILEGES[currentIndex + 1];
    return (balance / nextPrivilege.required) * 100;
  };

  return (
    <div className="min-h-screen bg-gradient-to-br from-background via-muted to-background p-4 md:p-8">
      <div className="max-w-6xl mx-auto space-y-6">
        <div className="text-center space-y-2 animate-fade-in">
          <h1 className="text-4xl md:text-6xl font-bold bg-gradient-to-r from-primary via-secondary to-accent bg-clip-text text-transparent">
            üí∏ GAMING BOT
          </h1>
          <p className="text-muted-foreground text-lg">–ö–ª–∏–∫–∞–π, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π, —Ä–∞–∑–≤–∏–≤–∞–π—Å—è!</p>
        </div>

        <div className="grid md:grid-cols-2 gap-4">
          <Card className="p-6 space-y-4 bg-gradient-to-br from-card to-muted border-primary/20 animate-scale-in">
            <div className="flex justify-between items-center">
              <div>
                <p className="text-sm text-muted-foreground">–ë–∞–ª–∞–Ω—Å</p>
                <p className="text-3xl font-bold text-primary">{formatNumber(balance)} üí∞</p>
              </div>
              <div className="text-right">
                <p className="text-sm text-muted-foreground">–î–æ–Ω–∞—Ç</p>
                <p className="text-2xl font-bold text-accent">{formatNumber(donateBalance)} üíé</p>
              </div>
            </div>
            <div className="space-y-2">
              <div className="flex justify-between items-center">
                <Badge variant="secondary" className="text-lg px-4 py-2">
                  {privilege.name}
                </Badge>
                <span className="text-sm text-muted-foreground">
                  {formatNumber(privilege.minClick)} - {formatNumber(privilege.maxClick)} –∑–∞ –∫–ª–∏–∫
                </span>
              </div>
              <Progress value={progressToNext()} className="h-3" />
            </div>
          </Card>

          <Card className="p-6 flex items-center justify-center bg-gradient-to-br from-primary/10 to-secondary/10 border-primary/30 animate-scale-in">
            <Button
              size="lg"
              onClick={handleClick}
              className={`text-6xl h-32 w-32 rounded-full bg-gradient-to-br from-primary to-secondary hover:from-primary/90 hover:to-secondary/90 shadow-2xl transition-all duration-300 ${
                coinAnimation ? 'animate-coin-pop' : ''
              } animate-pulse-glow`}
            >
              üí∏
            </Button>
          </Card>
        </div>

        <Tabs defaultValue="profile" className="w-full">
          <TabsList className="grid w-full grid-cols-4 bg-muted">
            <TabsTrigger value="profile">üë§ –ü—Ä–æ—Ñ–∏–ª—å</TabsTrigger>
            <TabsTrigger value="business">üè¢ –ë–∏–∑–Ω–µ—Å</TabsTrigger>
            <TabsTrigger value="casino">üé∞ –ö–∞–∑–∏–Ω–æ</TabsTrigger>
            <TabsTrigger value="help">‚ùì –ü–æ–º–æ—â—å</TabsTrigger>
          </TabsList>

          <TabsContent value="profile" className="space-y-4">
            <Card className="p-6 space-y-4">
              <h2 className="text-2xl font-bold">üë§ –¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å</h2>
              <div className="grid md:grid-cols-2 gap-4">
                <div className="space-y-2">
                  <p className="text-muted-foreground">ID –∏–≥—Ä–æ–∫–∞</p>
                  <p className="text-xl font-bold">#95E1D3</p>
                </div>
                <div className="space-y-2">
                  <p className="text-muted-foreground">–ü—Ä–∏–≤–∏–ª–µ–≥–∏—è</p>
                  <p className="text-xl font-bold">{privilege.name}</p>
                </div>
                <div className="space-y-2">
                  <p className="text-muted-foreground">–ë–∏–∑–Ω–µ—Å–æ–≤</p>
                  <p className="text-xl font-bold">{ownedBusinesses.length} / 5</p>
                </div>
                <div className="space-y-2">
                  <p className="text-muted-foreground">–î–æ—Ö–æ–¥ –≤ —Å–µ–∫—É–Ω–¥—É</p>
                  <p className="text-xl font-bold text-accent">{formatNumber(businessProfit)} üí∞</p>
                </div>
              </div>
            </Card>
          </TabsContent>

          <TabsContent value="business" className="space-y-4">
            <div className="flex justify-between items-center">
              <h2 className="text-2xl font-bold">üè¢ –ú–∞–≥–∞–∑–∏–Ω –±–∏–∑–Ω–µ—Å–æ–≤</h2>
              <Button onClick={collectProfit} variant="outline" className="bg-accent/10">
                üí∞ –°–æ–±—Ä–∞—Ç—å –ø—Ä–∏–±—ã–ª—å
              </Button>
            </div>
            <div className="grid md:grid-cols-2 gap-4">
              {BUSINESSES.map(business => (
                <Card
                  key={business.id}
                  className={`p-6 space-y-4 transition-all duration-300 ${
                    ownedBusinesses.includes(business.id)
                      ? 'bg-gradient-to-br from-primary/20 to-accent/20 border-primary'
                      : 'hover:border-primary/50'
                  }`}
                >
                  <div className="flex items-start justify-between">
                    <div className="space-y-1">
                      <p className="text-3xl">{business.emoji}</p>
                      <p className="font-bold">{business.name}</p>
                    </div>
                    {ownedBusinesses.includes(business.id) && (
                      <Badge variant="secondary">‚úÖ –ö—É–ø–ª–µ–Ω–æ</Badge>
                    )}
                  </div>
                  <div className="space-y-2">
                    <div className="flex justify-between text-sm">
                      <span className="text-muted-foreground">–¶–µ–Ω–∞:</span>
                      <span className="font-bold text-secondary">{formatNumber(business.price)} üí∞</span>
                    </div>
                    <div className="flex justify-between text-sm">
                      <span className="text-muted-foreground">–î–æ—Ö–æ–¥/—Å–µ–∫:</span>
                      <span className="font-bold text-accent">{formatNumber(business.profit)} üí∞</span>
                    </div>
                  </div>
                  <Button
                    onClick={() => buyBusiness(business)}
                    disabled={ownedBusinesses.includes(business.id)}
                    className="w-full bg-gradient-to-r from-primary to-secondary hover:from-primary/90 hover:to-secondary/90"
                  >
                    {ownedBusinesses.includes(business.id) ? '‚úÖ –ö—É–ø–ª–µ–Ω–æ' : 'üíé –ö—É–ø–∏—Ç—å'}
                  </Button>
                </Card>
              ))}
            </div>
          </TabsContent>

          <TabsContent value="casino" className="space-y-4">
            <Card className="p-6 space-y-6">
              <div className="text-center space-y-2">
                <h2 className="text-3xl font-bold">üé∞ –ö–∞–∑–∏–Ω–æ</h2>
                <p className="text-muted-foreground">–®–∞–Ω—Å –≤—ã–∏–≥—Ä—ã—à–∞: 40% | –ú–Ω–æ–∂–∏—Ç–µ–ª—å: √ó1.5</p>
              </div>
              <div className="grid md:grid-cols-3 gap-4">
                {[10000, 50000, 100000].map(bet => (
                  <Button
                    key={bet}
                    onClick={() => playCasino(bet)}
                    size="lg"
                    className="h-24 text-2xl bg-gradient-to-br from-destructive to-secondary hover:from-destructive/90 hover:to-secondary/90"
                  >
                    <div className="space-y-1">
                      <p>üé≤ {formatNumber(bet)}</p>
                      <p className="text-sm">–í—ã–∏–≥—Ä—ã—à: {formatNumber(Math.floor(bet * 1.5))}</p>
                    </div>
                  </Button>
                ))}
              </div>
            </Card>
          </TabsContent>

          <TabsContent value="help" className="space-y-4">
            <Card className="p-6 space-y-4">
              <h2 className="text-2xl font-bold">‚ùì –ö–æ–º–∞–Ω–¥—ã –∏ —Å–ø—Ä–∞–≤–∫–∞</h2>
              <div className="space-y-3">
                <div className="p-4 bg-muted rounded-lg">
                  <p className="font-bold">üí∏ –ö–ª–∏–∫</p>
                  <p className="text-sm text-muted-foreground">–û—Å–Ω–æ–≤–Ω–æ–π –∑–∞—Ä–∞–±–æ—Ç–æ–∫, –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –ø—Ä–∏–≤–∏–ª–µ–≥–∏–∏</p>
                </div>
                <div className="p-4 bg-muted rounded-lg">
                  <p className="font-bold">üè¢ –ë–∏–∑–Ω–µ—Å—ã</p>
                  <p className="text-sm text-muted-foreground">–ü–æ–∫—É–ø–∞–π –±–∏–∑–Ω–µ—Å—ã –¥–ª—è –ø–∞—Å—Å–∏–≤–Ω–æ–≥–æ –¥–æ—Ö–æ–¥–∞</p>
                </div>
                <div className="p-4 bg-muted rounded-lg">
                  <p className="font-bold">üé∞ –ö–∞–∑–∏–Ω–æ</p>
                  <p className="text-sm text-muted-foreground">–†–∏—Å–∫—É–π –º–æ–Ω–µ—Ç–∞–º–∏ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –∑–∞—Ä–∞–±–æ—Ç–∫–∞</p>
                </div>
                <div className="p-4 bg-muted rounded-lg">
                  <p className="font-bold">üéñÔ∏è –ü—Ä–∏–≤–∏–ª–µ–≥–∏–∏</p>
                  <p className="text-sm text-muted-foreground">–†–∞—Å—Ç—É—Ç –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–∏ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞</p>
                </div>
              </div>
            </Card>
          </TabsContent>
        </Tabs>
      </div>
    </div>
  );
}
